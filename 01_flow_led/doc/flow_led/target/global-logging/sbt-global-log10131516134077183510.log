[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17.0.6)
[debug] Load.defaultLoad until apply took 253.6142ms
[debug]           Load.loadUnit: plugins took 62.0498ms
[debug]           Load.loadUnit: defsScala took 0.2364ms
[debug] [Loading] Scanning directory E:\FPGA\fpga_study\01_flow_led\doc\flow_led\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\FPGA\fpga_study\01_flow_led\doc\flow_led\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.8481 ms
[debug]               Load.resolveProject(flow_led-build) took 31.7363ms
[debug]             Load.loadTransitive: finalizeProject(Project(id flow_led-build, base: E:\FPGA\fpga_study\01_flow_led\doc\flow_led\project, plugins: List(<none>))) took 60.9555ms
[debug] [Loading] Done in E:\FPGA\fpga_study\01_flow_led\doc\flow_led\project, returning: (flow_led-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 78.2977ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2226ms
[debug]         Load.loadUnit(file:/E:/FPGA/fpga_study/01_flow_led/doc/flow_led/project/, ...) took 145.6049ms
[debug]       Load.apply: load took 265.5391ms
[debug]       Load.apply: resolveProjects took 4.4598ms
[debug]       Load.apply: finalTransforms took 43.6432ms
[debug]       Load.apply: config.delegates took 5.3327ms
[debug]       Load.apply: Def.make(settings)... took 250.6098ms
[debug]       Load.apply: structureIndex took 70.2974ms
[debug]       Load.apply: mkStreams took 1.6804ms
[info] loading project definition from E:\FPGA\fpga_study\01_flow_led\doc\flow_led\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1180.7101ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory E:\FPGA\fpga_study\01_flow_led\doc\flow_led
[debug]       Load.loadUnit: mkEval took 4.1757ms
[debug] [Loading] Found root project mylib w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.688 ms
[info] loading settings for project mylib from build.sbt ...
[debug]         Load.resolveProject(mylib) took 2.2512ms
[debug]       Load.loadTransitive: finalizeProject(Project(id mylib, base: E:\FPGA\fpga_study\01_flow_led\doc\flow_led, plugins: List(<none>))) took 4.7954ms
[debug] [Loading] Done in E:\FPGA\fpga_study\01_flow_led\doc\flow_led, returning: (mylib)
[debug]     Load.loadUnit: loadedProjectsRaw took 163.3428ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.3833ms
[debug]   Load.loadUnit(file:/E:/FPGA/fpga_study/01_flow_led/doc/flow_led/, ...) took 1357.902ms
[debug] Load.apply: load took 1371.4378ms
[debug] Load.apply: resolveProjects took 0.108ms
[debug] Load.apply: finalTransforms took 8.4311ms
[debug] Load.apply: config.delegates took 0.3633ms
[debug] Load.apply: Def.make(settings)... took 59.4679ms
[debug] Load.apply: structureIndex took 23.37ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to test (in build file:/E:/FPGA/fpga_study/01_flow_led/doc/flow_led/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-b55774c67f0cfe0427d8
[debug] Writing bsp connection file
[info] started sbt server
